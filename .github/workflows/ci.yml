name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DOCKER_IMAGE: mmockus/mycasa
  REACT_APP_API_BASE: http://casaserver.local
  REACT_APP_API_PORT: 8735

jobs:
  build:
    name: Build & Test (PR / Push)
    runs-on: ubuntu-latest
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: Install dependencies
        working-directory: ui
        run: npm ci --no-audit --no-fund

      - name: Run tests
        working-directory: ui
        run: npm test -- --watchAll=false

      - name: Build (React)
        working-directory: ui
        run: npm run build
        env:
          REACT_APP_API_BASE: ${{ env.REACT_APP_API_BASE }}
          REACT_APP_API_PORT: ${{ env.REACT_APP_API_PORT }}

      - name: Docker meta (derive version)
        id: meta
        run: |
          VERSION=$(jq -r '.version' ui/package.json)
          BRANCH_TAG=$(echo "${GITHUB_REF_NAME}" | tr '/' '-' | tr -cd '[:alnum:]._-')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "branch_tag=$BRANCH_TAG" >> $GITHUB_OUTPUT
          echo "Using version $VERSION branch tag $BRANCH_TAG"

      - name: Build Docker image (no push on PR)
        if: github.event_name == 'pull_request'
        run: |
          docker build \
            --build-arg REACT_APP_API_BASE=${{ env.REACT_APP_API_BASE }} \
            --build-arg REACT_APP_API_PORT=${{ env.REACT_APP_API_PORT }} \
            -t $DOCKER_IMAGE:pr-${{ steps.meta.outputs.branch_tag }} \
            .

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image (main branch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          VERSION=${{ steps.meta.outputs.version }}
          BRANCH=${{ steps.meta.outputs.branch_tag }}
          docker build \
            --build-arg REACT_APP_API_BASE=${{ env.REACT_APP_API_BASE }} \
            --build-arg REACT_APP_API_PORT=${{ env.REACT_APP_API_PORT }} \
            -t $DOCKER_IMAGE:latest \
            -t $DOCKER_IMAGE:$VERSION \
            -t $DOCKER_IMAGE:$BRANCH \
            .
          docker push $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:$VERSION
          docker push $DOCKER_IMAGE:$BRANCH

      - name: Summary
        run: |
          echo "CI complete." >> $GITHUB_STEP_SUMMARY
          echo "Version: ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" = "push" ] && [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "Pushed tags: latest, ${{ steps.meta.outputs.version }}, ${{ steps.meta.outputs.branch_tag }}" >> $GITHUB_STEP_SUMMARY
          fi
